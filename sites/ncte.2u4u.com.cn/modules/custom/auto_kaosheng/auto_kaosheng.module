<?php

/**
 * Implements hook_menu().
 */
function auto_kaosheng_menu() {
  $items = array();

	$items['admin/config/development/autokaosheng'] = array(
    'title'            => '自动关联考生考场',
    'page callback'    => 'drupal_get_form',
	  'page arguments'    =>  array('auto_kaosheng_generate_relation_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,   
  );
	return $items;
}

function auto_kaosheng_generate_relation_form(){
  $form['submit'] = array(
		'#type' =>'submit',
		'#value' => t('开始考生考场关联'),
	);
	/*
	$form['test'] = array(
		'#value' => t('迁移'),
	);
	*/
	return $form;
}

function auto_kaosheng_generate_relation_form_submit($form,&$form_state){
	//$types = array_filter($form_state['values']['types']);
	$batch =array(
		'operations' => array(
		  array('auto_kaosheng_generate_relation_process',array()),
		  ),
		'finished' => 'auto_kaosheng_generate_relation_finished',
		'title' => t('考生考场关联'),
		'init_message' => t('开始考生考场关联.'),
		//'progress_message' => t('Reindexed @current out of @total.'),
		'error_message' => t('批量考生考场关联遇到错误.'),
	);
	batch_set($batch);
}
function auto_kaosheng_generate_relation_process(&$context){
	$size =1;
	//$jb = 1;

	//$types_str ='story,page';
	//$types_str = "'".implode("','", $types)."'";
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['last_nid'] = 0;
		$context['sandbox']['max'] =
      db_select('node', 'n')
			->condition('n.type', 'kaochang')
			//->condition('n.nid', 5884, '<')
			->countQuery()
			->execute()
			->fetchField();
			
		
	}
	//读取考场信息
	$query = db_select('node', 'n')
		->fields('n', array('nid', 'vid'))
		->condition('n.nid', $context['sandbox']['last_nid'], '>')
		->condition('n.type', 'kaochang')
		//->condition('n.nid', 5884, '<')
		->orderBy('n.nid', 'ASC')
		->range(0, $size);
		
	$result = $query->execute();
	
	//循环
	//drupal_set_message('tname:12233455');
	foreach ($result as $kaochang) { 
	  $nid = $kaochang->nid;
		$node_kaochang = node_load($nid);
		//考场所在地区
		 $user = user_load($node_kaochang->uid);
		$tid = $user->field_shengfen_chengshi['und'][0]['tid'];
		//获取考场容纳的考生数量
		$zuowei_total = $node_kaochang->field_kaochang_renshu['zh-hans'][0]['value'];
	//	drupal_set_message('zuowei_total:'.$zuowei_total);
	//	drupal_set_message(print_r($node_kaochang));
	//	drupal_set_message('zuowei_total nid:'.$node_kaochang->nid);
		//debug($node_kaochang);
		$jb = 0;
		while( $jb < 4){
		$jb++;
		
		$i = 1;
		//对于每个座位号循环
		while( $i<= $zuowei_total){
		   //检查该座位号上面是否已经分配了考生
			$query_zuowei = db_select('field_data_field_kaochang', 'kc')
			->condition('kc.field_kaochang_nid', $kaochang->nid);
			
			$query_zuowei->leftJoin('field_data_field_baokao_jibie', 'jb', 'jb.entity_type  = kc.entity_type  AND  jb.entity_id  = kc.entity_id ');
		  $query_zuowei->condition('jb.field_baokao_jibie_value', $jb);
			
			//检查该座位号上面是否已经分配了考生
			$query_zuowei->leftJoin('field_data_field_zuowei', 'zw', 'zw.entity_type  = kc.entity_type  AND  zw.entity_id  = kc.entity_id ');
		  $query_zuowei->condition('zw.field_zuowei_value', $i);
			
			$result_zuowei = $query_zuowei->countQuery()
			->execute()
			->fetchField();
			//drupal_set_message('result_zuowei:'.$result_zuowei);
			if($result_zuowei){
			
			}else{
			// 如果没有分配考生，此时检查还没有分配考场的考生，为其分配考场。
			  $query_kaosheng = db_select('node', 'n')
		    ->fields('n', array('nid', 'vid'))
				->condition('n.type', 'kaosheng_baoming');
				
				$query_kaosheng->leftJoin('field_data_field_kaochang','kc','n.nid = kc.entity_id');
				$query_kaosheng->isNull('kc.field_kaochang_nid');
				
				$query_kaosheng->leftJoin('field_data_field_baokao_jibie', 'jb', 'jb.entity_id  = n.nid ');
		    $query_kaosheng->condition('jb.field_baokao_jibie_value', $jb);
				
				//$query->leftJoin('users','u','n.uid = u.uid');
				//$query->isNull('kc.field_kaochang_nid');
				
				$query_kaosheng->leftJoin('field_data_field_shengfen_chengshi','cs',' cs.entity_id = n.uid ');
				$query_kaosheng->condition('cs.field_shengfen_chengshi_tid',$tid);
				
				
				$query_kaosheng->range(0, 1);
				$result_kaosheng = $query_kaosheng->execute()->fetchObject();
				//drupal_set_message('result_kaosheng:'.$result_kaosheng->nid);
				if(!empty($result_kaosheng)){
				 // drupal_set_message('result_kaosheng:'.'45678');
				  $kaosheng = node_load($result_kaosheng->nid);
					$kaosheng->field_kaochang['zh-hans'][0]['nid'] = $kaochang->nid;
					$kaosheng->field_zuowei['zh-hans'][0]['value'] = $i;
					node_save($kaosheng);
				}
			}
		  $i++;
			
		}
		}

		
	  $context['sandbox']['progress']++;
	  $context['sandbox']['last_nid'] = $record->nid;
	}

	if($context['sandbox']['progress'] == $context['sandbox']['max']){
		$context['finished'] = 1;
	}else{
		$context['finished'] = $context['sandbox']['progress']/$context['sandbox']['max'];
	}
}
function auto_kaosheng_generate_relation_finished($success, $results, $operations){
	if ($success) {
		// Here we do something meaningful with the results.
		$message = t('考生考场关联完成');
		
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		$message = '在考生考场关联时出现一个错误'. $error_operation[0] .' 其参数为 :'. print_r($error_operation[0], TRUE);
	}
	drupal_set_message($message);
}