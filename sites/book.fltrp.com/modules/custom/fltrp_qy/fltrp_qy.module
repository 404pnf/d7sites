<?php
// $Id$

/**
 * @file
 * 实现publisher字段的迁移.
 */
 
 /**
 * 实现钩子hook_menu().
 */
function fltrp_qy_menu() {

  $items['admin/config/development/fltrp'] = array(
    'title'            => '迁移FLTRP分社数据',
    'page callback'    => 'drupal_get_form',
	  'page arguments'    =>  array('fltrp_qy_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,
    'type'             => MENU_NORMAL_ITEM,
   
  );
  $items['admin/config/development/fltrp/bianma'] = array(
    'title'            => '按照编码迁移FLTRP分社数据',
    'page callback'    => 'drupal_get_form',
	'page arguments'    =>  array('fltrp_qy_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,
    'type'             => MENU_DEFAULT_LOCAL_TASK,
   
  );

	$items['admin/config/development/fltrp/bianshi'] = array(
    'title'            => '按照编室迁移FLTRP分社数据',
    'page callback'    => 'drupal_get_form',
	'page arguments'    =>  array('fltrp_qy_bianshi_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,
    'type'             => MENU_LOCAL_TASK,
   
  );
	
	$items['admin/config/development/fltrp/xilie'] = array(
    'title'            => '导入图书系列分类',
    'page callback'    => 'drupal_get_form',
	'page arguments'    =>  array('fltrp_qy_xilie_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,
    'type'             => MENU_LOCAL_TASK,
   
  );
	
	$items['admin/config/development/fltrp/xltb'] = array(
    'title'            => '系列信息同步',
    'page callback'    => 'drupal_get_form',
	'page arguments'    =>  array('fltrp_qy_xltb_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,
    'type'             => MENU_LOCAL_TASK,
   
  );
	
	$items['admin/config/development/fltrp/longtext'] = array(
    'title'            => '长文本信息信息同步',
    'page callback'    => 'drupal_get_form',
	'page arguments'    =>  array('fltrp_qy_longtext_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,
    'type'             => MENU_LOCAL_TASK,
   
  );
	
	$items['admin/config/development/fltrp/fenlei'] = array(
    'title'            => '分类信息同步',
    'page callback'    => 'drupal_get_form',
	'page arguments'    =>  array('fltrp_qy_fenlei_form'),
    'access arguments' => array('administer site configuration'),
    'weight'           => 1,
    'type'             => MENU_LOCAL_TASK,
   
  );
	
  return $items;
}
function fltrp_qy_form(){
	
	$form['submit'] = array(
		'#type' =>'submit',
		'#value' => t('迁移'),
	);
	/*
	$form['test'] = array(
		'#value' => t('迁移'),
	);
	*/
	return $form;
}

function fltrp_qy_form_submit($form,&$form_state){
	//$types = array_filter($form_state['values']['types']);
	$batch =array(
		'operations' => array(
		  array('fltrp_qy_bianma_process',array()),
		  ),
		'finished' => 'fltrp_qy_bianma_finished',
		'title' => t('迁移FLTRP分社数据'),
		'init_message' => t('开始批量迁移.'),
		//'progress_message' => t('Reindexed @current out of @total.'),
		'error_message' => t('批量迁移遇到错误.'),
	);
	batch_set($batch);
}

function fltrp_qy_bianma_process(&$context){
	
	$size =5;
  $fenshe_array =array('BMJC', 'BMZJ', 'BMGY', 'BMZY', 'BMXS', 'BMSK', 'BMEL', 'BMSM', 'BMWL', 'BMPG','BMEF');
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['max'] = Database::getConnection('default', 'data1')
			->select('book2type', 'b')
			->condition('b.cid', $fenshe_array, 'IN')
			->condition('b.flag', 1, '<')
			->condition('b.bsno', 100000, '<')
			->countQuery()
			->execute()
			->fetchField();
	}
	
	$query = Database::getConnection('default', 'data1')
	  ->select('book2type', 'b')
		->fields('b', array('bsno', 'cid'))
		->condition('b.cid', $fenshe_array, 'IN')
		->condition('b.flag', 1, '<')
		->condition('b.bsno', 100000, '<')
		->range(0, $size);
	
	$result = $query->execute();
	foreach ($result as $record) { 
	//$record->cid ='BMJC';

	
    $tname = '';	

	  if($record->cid =='BMJC'){
		  $tname = '基础英语教育分社';
		}
		if($record->cid =='BMZJ'){
		  $tname = '职业教育出版分社';
		}
		if($record->cid =='BMGY'){
		  $tname = '高等英语教育出版分社';
		}
		if($record->cid =='BMZY'){
		  $tname = '英语教育出版分社';
		}
		if($record->cid =='BMXS'){
		  $tname = '综合英语出版分社';
		}
		if($record->cid =='BMSK'){
		  $tname = '人文社科出版分社';
		}

		if($record->cid =='BMEL'){
		  $tname = '《英语学习》杂志社';
		}
		if($record->cid =='BMSM'){
		  $tname = '数码产品事业部';
		}
		if($record->cid =='BMWL'){
		  $tname = '电子网络出版分社';
		}
		if($record->cid =='BMPG'){
		  $tname = '北京青苹果文化发展公司';
		}
		if($record->cid =='BMEF'){
		  $tname = '早教中心';
		}
	
		if($tname != ''){
		//if(!empty($tname)){
	
		  //根据machine_name得到vid,
		  $vid_result = db_select('taxonomy_vocabulary', 'tv')
			->fields('tv', array('vid'))
			->condition('tv.machine_name', 'fenshe', '=')
			->execute()
			->fetchAssoc();
			
			$vid = $vid_result['vid'];
				
		  $tid = fltrp_qy_get_tid_by_name($tname, $vid);
			//根据bsno得到nid
			$nid_query = db_select('field_data_field_bsno', 'fb')
			->fields('fb', array('entity_id'))
			->condition('fb.field_bsno_value', $record->bsno, '=')
			->condition('fb.bundle', 'book', '=');
			
			$nid_result = $nid_query->execute()->fetchAssoc();
			$nid = $nid_result['entity_id'];
				
			$node = node_load($nid); 
			//if($node->changed > time()-1*24*60*60){
			if($node->nid > 10777){
				$node->field_department = array(
					'und' => array(
						0 => array(
							'tid' => $tid,
						)
					)
				);
			
				node_save($node);
			}
		
			
		}
		
	  Database::getConnection('default', 'data1')
		  ->update('book2type')
			->fields(
			   array(    
					 'flag' => 1,    
				 ))
			->condition('bsno', $record->bsno, '=')
			->condition('cid', $record->cid, '=')
			->execute();
		
	  $context['sandbox']['progress']++;

		
	}
	
	if($context['sandbox']['progress'] ==$context['sandbox']['max']){
		$context['finished'] = 1;
	}else{
		$context['finished'] = $context['sandbox']['progress']/$context['sandbox']['max'];
	}
		
}

function fltrp_qy_bianma_finished($success, $results, $operations){
	if ($success) {
		// Here we do something meaningful with the results.
		$message = t('迁移FLTRP分社数据完成');
		
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		$message = '在迁移FLTRP分社数据时出现一个错误'. $error_operation[0] .' 其参数为 :'. print_r($error_operation[0], TRUE);
	}
	drupal_set_message($message);
}
function fltrp_qy_bianshi_form(){
	$form['submit'] = array(
		'#type' =>'submit',
		'#value' => t('转换编室'),
	);
	return $form;
}

function fltrp_qy_bianshi_form_submit($form,&$form_state){
	//$types = array_filter($form_state['values']['types']);
	$batch =array(
		'operations' => array(
		  array('fltrp_qy_bianshi_process',array()),
		  ),
		'finished' => 'fltrp_qy_bianshi_finished',
		'title' => t('按照编室迁移FLTRP分社数据'),
		'init_message' => t('开始按照编室迁移FLTRP分社数据.'),
		//'progress_message' => t('Reindexed @current out of @total.'),
		'error_message' => t('按照编室迁移FLTRP分社数据遇到错误.'),
	);
	batch_set($batch);
}
function fltrp_qy_bianshi_process(&$context){
	$size =10;
	$vid = 8;
	//$types_str ='story,page';
	//$types_str = "'".implode("','", $types)."'";
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['last_nid'] = 0;
		$context['sandbox']['max'] =
      db_select('node', 'n')
			->condition('n.type', 'book')
			//->condition('n.nid', 10, '<')
			->condition('n.nid', 10777, '>')
			->countQuery()
			->execute()
			->fetchField();
		
	}
	//$sql = "SELECT nid,vid,field_clc_value,field_clc1_value FROM {content_type_book} WHERE field_clc_value is not NULL AND field_clc1_value is NULL";
	//$result = db_query_range($sql,0,$size);
	
	$query = db_select('node', 'n')
		->fields('n', array('nid', 'vid'))
		->condition('n.nid', $context['sandbox']['last_nid'], '>')
		->condition('n.type', 'book')
		->condition('n.nid', 10777, '>')
		//->condition('n.nid', 10, '<')
		->range(0, $size);
		
	$result = $query->execute();
	//drupal_set_message('tname:12233455');
	foreach ($result as $record) { 
	  $nid = $record->nid;
		$node = node_load($nid);
		//if($node->changed > time()-1*24*60*60){
		if($node->nid > 10777){
		//drupal_set_message('nid:'. $nid);
		//drupal_set_message("node->field_bianshi['und'][0]['value']". $node->field_bianshi['und'][0]['value']);
		//ebug($record);
		//drupal_set_message('node1->field_bianshi:'. $node1->field_bianshi['und'][0]['tid']);
		$bianshi_term = taxonomy_term_load($node->field_bianshi['und'][0]['tid']);
		//drupal_set_message('bianshi_term->name'. $bianshi_term->name);
		$tname = '';
		//if(!empty(strstr($bianshi_term->name,'综合语种'))){
		if(fltrp_qy_str_contain($bianshi_term->name,'综合语种')){
		
		  $tname = '综合语种出版分社';
			
		}
		//if(!empty(strstr($bianshi_term->name,'汉语'))){
		if(fltrp_qy_str_contain($bianshi_term->name,'汉语')){
		  $tname = '汉语出版分社';
			
		}
		if(fltrp_qy_str_contain($bianshi_term->name,'儿童出版') || fltrp_qy_str_contain($bianshi_term->name,'少儿出版') ){
		  $tname = '少儿出版分社';
			
		}
		//drupal_set_message('tname:12'. $tname);
		if(!empty($tname)){
		  //drupal_set_message('tname:'.$tname);
		  //根据machine_name得到vid,
		  $vid_result = db_select('taxonomy_vocabulary', 'tv')
			->fields('tv', array('vid'))
			->condition('tv.machine_name', 'fenshe', '=')
			->execute()
			->fetchAssoc();
			
			$vid = $vid_result['vid'];
			
		  $tid = fltrp_qy_get_tid_by_name($tname, $vid);
			
			$node->field_department = array(
				'und' => array(
					0 => array(
						'tid' => $tid,
					)
				)
			);
			node_save($node);
		}
	
    }	
	  $context['sandbox']['progress']++;
	  $context['sandbox']['last_nid'] = $record->nid;
	}

	if($context['sandbox']['progress'] ==$context['sandbox']['max']){
		$context['finished'] = 1;
	}else{
		$context['finished'] = $context['sandbox']['progress']/$context['sandbox']['max'];
	}
}

function fltrp_qy_bianshi_finished($success, $results, $operations){
	if ($success) {
		// Here we do something meaningful with the results.
		$message = t('按照编室迁移FLTRP分社数据完成');
		
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		$message = '在按照编室迁移FLTRP分社数据时出现一个错误'. $error_operation[0] .' 其参数为 :'. print_r($error_operation[0], TRUE);
	}
	drupal_set_message($message);
}

function fltrp_qy_get_tid_by_name($tname, $vid){
  $tid = '';
  if(empty($tname)){
	  return;
	}else{
	    $tid = db_select('taxonomy_term_data', 'td')
        ->fields('td', array('tid'))
        ->condition('td.name', trim($tname), '=')
        ->condition('td.vid', $vid)
        ->execute()
        ->fetchField();
				//drupal_set_message('abcdefg');
				/*
			if(empty($tid)){
			   $term = new stdClass();
				 $term->vid = $vid;
				 $term->name = $tname;
			   //$status = taxonomy_term_save($term);
				 drupal_set_message('abcdefg');
				 $tid = $term->tid;
				 //$tids
			}
			*/
			
	}
	return $tid;
}

function fltrp_qy_str_contain($first, $second){

  $flag = FALSE;
	$third = strstr($first,$second);
	
  if(!empty($third)){
	  $flag = TRUE;
	}
	
	return $flag;
}

function fltrp_qy_xilie_form(){
	$form['submit'] = array(
		//'#type' =>'submit',
		'#value' => t('导入系列分类'),
	);
	return $form;
}
function fltrp_qy_xilie_form_submit($form,&$form_state){
	//$types = array_filter($form_state['values']['types']);
	$batch =array(
		'operations' => array(
		  array('fltrp_qy_xilie_process',array()),
		  ),
		'finished' => 'fltrp_qy_xilie_finished',
		'title' => t('导入系列分类'),
		'init_message' => t('开始导入系列分类.'),
		//'progress_message' => t('Reindexed @current out of @total.'),
		'error_message' => t('导入系列分类遇到错误.'),
	);
	batch_set($batch);
}
function fltrp_qy_xilie_process(&$context){
	$size =10;
	//$vid = 8;
	//$types_str ='story,page';
	//$types_str = "'".implode("','", $types)."'";
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['max'] = Database::getConnection('default', 'data1')
			->select('bookotype', 'b')
			->condition('b.isseries', 1, '=')
			->countQuery()
			->execute()
			->fetchField();
			
		$vid_result = db_select('taxonomy_vocabulary', 'tv')
			->fields('tv', array('vid'))
			->condition('tv.machine_name', 'xilie', '=')
			->execute()
			->fetchAssoc();
			
		$context['sandbox']['vid'] = $vid_result['vid'];
	}
	//$sql = "SELECT nid,vid,field_clc_value,field_clc1_value FROM {content_type_book} WHERE field_clc_value is not NULL AND field_clc1_value is NULL";
	//$result = db_query_range($sql,0,$size);
	
	Database::getConnection('default', 'data1')->query('set names latin1');
	$query = Database::getConnection('default', 'data1')
	  ->select('bookotype', 'b')
		->fields('b', array('id', 'name', 'brief', 'isseries'))
		->condition('b.isseries', 1, '=')
		->condition('b.flag', 1, '<')
		//->condition('q.bsno', 1000, '<')
		->range(0, $size);
	
	$result = $query->execute();
	//drupal_set_message('tname:12233455');
	foreach ($result as $record) { 
	  if($record->id =='YYZDSC'){
		  drupal_set_message($record->name);
			drupal_set_message($record->brief);
		}
		//$encode = mb_detect_encoding($record->name, array("ASCII","GB2312","GBK","UTF-8","BIG5"));
	  $record->name = iconv('EUC-CN',"UTF-8//IGNORE",$record->name) ; //iconv转换
		$record->brief = iconv('EUC-CN',"UTF-8//IGNORE",$record->brief) ; //iconv转换
		if($record->id =='YYZDSC'){
		  drupal_set_message('name:'.$record->name);
			drupal_set_message('brief:'.$record->brief);
		}
		$term = new stdClass();
	  $term->vid = $context['sandbox']['vid'];
	  $term->name = trim($record->name);
		$term->description = trim($record->brief);
		
		$tid_query = db_select('field_data_field_oid', 'f')
			->fields('f', array('entity_id'))
			->condition('f.field_oid_value', $record->id, '=')
			->condition('f.entity_type', 'taxonomy_term', '=');
			
		$tid_result = $tid_query->execute()->fetchAssoc();
		$tid = $tid_result['entity_id'];
		if(!empty($tid)){
		  $term->tid = $tid;
		}
		//$term->description = trim($record->brief);
		$term->field_oid = array(
				'und' => array(
					0 => array(
						'value' => $record->id,
					)
				)
		);
	  $status = taxonomy_term_save($term);
		
	  Database::getConnection('default', 'data1')
		  ->update('bookotype')
			->fields(
			   array(    
					 'flag' => 1,    
				 ))
			->condition('id', $record->id, '=')
			->execute();
	  $context['sandbox']['progress']++;

	}

	if($context['sandbox']['progress'] ==$context['sandbox']['max']){
		$context['finished'] = 1;
	}else{
		$context['finished'] = $context['sandbox']['progress']/$context['sandbox']['max'];
	}
}

function fltrp_qy_xilie_finished($success, $results, $operations){
	if ($success) {
		// Here we do something meaningful with the results.
		$message = t('导入系列分类完成');
		
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		$message = '在导入系列分类时出现一个错误'. $error_operation[0] .' 其参数为 :'. print_r($error_operation[0], TRUE);
	}
	drupal_set_msage($message);
}

function fltrp_qy_xltb_form(){
	$form['submit'] = array(
		//'#type' =>'submit',
		'#value' => t('系列信息同步'),
	);
	return $form;
}
function fltrp_qy_xltb_form_submit($form,&$form_state){
	//$types = array_filter($form_state['values']['types']);
	$batch =array(
		'operations' => array(
		  array('fltrp_qy_xltb_process',array()),
		  ),
		'finished' => 'fltrp_qy_xltb_finished',
		'title' => t('系列信息同步'),
		'init_message' => t('开始系列信息同步.'),
		//'progress_message' => t('Reindexed @current out of @total.'),
		'error_message' => t('系列信息同步遇到错误.'),
	);
	batch_set($batch);
}
function fltrp_qy_xltb_process(&$context){
	$size =10;
	$vid = 8;
	//$types_str ='story,page';
	//$types_str = "'".implode("','", $types)."'";
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
			
	  $max_sql = "select count(*) 
	         from book2type b 
					 LEFT JOIN bookotype bt ON b.cid = bt.id 
					 WHERE b.flag < 1 AND bt.isseries = :isseries AND b.bsno < 100000";
    $result = Database::getConnection('default', 'data1')->query($max_sql, array(':isseries' => 1));
	  $context['sandbox']['max'] = $result->fetchField();
	}
	
	Database::getConnection('default', 'data1')->query('set names latin1');
	$query_sql = "select b.bsno, b.cid 
	 from book2type b 
	 LEFT JOIN bookotype bt ON b.cid = bt.id 
	 WHERE b.flag < 1 AND bt.isseries = :isseries AND b.bsno < 100000 LIMIT 0 , 10";
	 
	$result = Database::getConnection('default', 'data1')->query($query_sql, array(':isseries' => 1));
	/*
	$query = Database::getConnection('default', 'data')
	  ->select('book2type', 'b')
		->fields('b', array('cid', 'bsno', 'flag'))
		->condition('b.flag', 1, '<')
		->leftJoin('bookotype', 'bt', 'b.cid = bt.id AND bt.isseries = :isseries', array(':isseries' => 1))
		->addField('bt', 'name')	
		->range(0, $size);
		
	$result = $query->execute();
	*/
	foreach ($result as $record) { 
	  //得到nid
		$nid_query = db_select('field_data_field_bsno', 'fb')
			->fields('fb', array('entity_id'))
			->condition('fb.field_bsno_value', $record->bsno, '=')
			->condition('fb.bundle', 'book', '=');
			
		$nid_result = $nid_query->execute()->fetchAssoc();
		$nid = $nid_result['entity_id'];
		//if($nid > )
		//得到节点
    $node = node_load($nid);
		if($node->changed > time()-1*24*60*60){
			//drupal_set_message("123:".$record->bsno.";456:".$nid);
			
			//根据cid得到tid
			$tid_query = db_select('field_data_field_oid', 'f')
				->fields('f', array('entity_id'))
				->condition('f.field_oid_value', $record->cid, '=')
				->condition('f.entity_type', 'taxonomy_term', '=');
				
			$tid_result = $tid_query->execute()->fetchAssoc();
			$tid = $tid_result['entity_id'];
			
			//
			if(!empty($tid)){
				$node->field_series = array(
					'und' => array(
						0 => array(
							'tid' => $tid,
						)
					)
				);
				node_save($node);
				//drupal_set_message("123456");
			}
		}
		Database::getConnection('default', 'data1')
		  ->update('book2type')
			->fields(
			   array(    
					 'flag' => 1,    
				 ))
			->condition('bsno', $record->bsno, '=')
			->condition('cid', $record->cid, '=')
			->execute();
		
	  $context['sandbox']['progress']++;
	  $context['sandbox']['last_nid'] = $record->nid;
	}

	if($context['sandbox']['progress'] ==$context['sandbox']['max']){
		$context['finished'] = 1;
	}else{
		$context['finished'] = $context['sandbox']['progress']/$context['sandbox']['max'];
	}
}

function fltrp_qy_xltb_finished($success, $results, $operations){
	if ($success) {
		// Here we do something meaningful with the results.
		$message = t('系列信息同步完成');
		
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		$message = '在系列信息同步时出现一个错误'. $error_operation[0] .' 其参数为 :'. print_r($error_operation[0], TRUE);
	}
	drupupal_set_message($message);
}



function fltrp_qy_longtext_form(){
	$form['submit'] = array(
		//'#type' =>'submit',
		'#value' => t('长文本信息信息同步'),
	);
	return $form;
}
function fltrp_qy_longtext_form_submit($form,&$form_state){
	//$types = array_filter($form_state['values']['types']);
	$batch =array(
		'operations' => array(
		  array('fltrp_qy_longtext_process',array()),
		  ),
		'finished' => 'fltrp_qy_longtext_finished',
		'title' => t('长文本信息信息同步'),
		'init_message' => t('开始长文本信息信息同步.'),
		//'progress_message' => t('Reindexed @current out of @total.'),
		'error_message' => t('长文本信息信息同步遇到错误.'),
	);
	batch_set($batch);
}
function fltrp_qy_longtext_process(&$context){
	$size =10;
	$vid = 8;
	//drupal_set_message('123123456');
	//$types_str ='story,page';
	//$types_str = "'".implode("','", $types)."'";
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
	  $context['sandbox']['max'] = Database::getConnection('default', 'data1')
			->select('books', 'b')
			//->condition('b.bsno', 100000, '<')
			->countQuery()
			->execute()
			->fetchField();
			
		$context['sandbox']['last_bsno'] = 0;
	}
	
	Database::getConnection('default', 'data1')->query('set names latin1');
	$query = Database::getConnection('default', 'data1')
	  ->select('books', 'b')
		->fields('b', array('bsno', 'zjml', 'sp', 'nrty', 'jcpd', 'zzjj', 'features', 'authorizationdetails', 'relativeinfo'))
		//->condition('b.bsno', 100000, '<')
		->condition('b.bsno', $context['sandbox']['last_bsno'], '>')
		->orderBy('b.bsno', 'ASC')
		->range(0, 10);
	 
	$result = $query->execute();
 // drupal_set_message('123456');
	foreach ($result as $record) { 
	  //得到nid
		$nid_query = db_select('field_data_field_bsno', 'fb')
			->fields('fb', array('entity_id'))
			->condition('fb.field_bsno_value', $record->bsno, '=')
			->condition('fb.bundle', 'book', '=');
			
		$nid_result = $nid_query->execute()->fetchAssoc();
		$nid = $nid_result['entity_id'];
		//得到节点
    $node = node_load($nid);
		
		 //drupal_set_message('123456789');
		//编码转换
		$record->zjml = iconv('EUC-CN',"UTF-8//IGNORE",$record->zjml) ; //iconv转换
		$record->sp = iconv('EUC-CN',"UTF-8//IGNORE",$record->sp) ; //iconv转换
		
		$record->nrty = iconv('EUC-CN',"UTF-8//IGNORE",$record->nrty) ; //iconv转换
		$record->jcpd = iconv('EUC-CN',"UTF-8//IGNORE",$record->jcpd) ; //iconv转换
		$record->zzjj = iconv('EUC-CN',"UTF-8//IGNORE",$record->zzjj) ; //iconv转换
		$record->features = iconv('EUC-CN',"UTF-8//IGNORE",$record->features) ; //iconv转换
		
		$record->authorizationdetails = iconv('EUC-CN',"UTF-8//IGNORE",$record->authorizationdetails) ; //iconv转换
		$record->relativeinfo = iconv('EUC-CN',"UTF-8//IGNORE",$record->relativeinfo) ; //iconv转换

		
		//向node映射
    //$this->addFieldMapping('field_directory', 'zjml');
		if(empty($node->field_directory['und'][0]['value']) && !empty($record->zjml)){
		  $node->field_directory = array(
				'und' => array(
					0 => array(
						'value' => $record->zjml,
						'format' => 'full_html',
					)
				)
			);
			//$node->field_directory['und'][0]['value'] = $record->zjml;
		}
		//$this->addFieldMapping('field_sp', 'sp');
		if(empty($node->field_sp['und'][0]['value']) && !empty($record->sp)){
		  $node->field_sp = array(
				'und' => array(
					0 => array(
						'value' => $record->sp,
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('body', 'nrty')
		if(empty($node->body['und'][0]['value']) && !empty($record->nrty)){
		  $node->body = array(
				'und' => array(
					0 => array(
						'value' => $record->nrty,
					//	'summary' => substr($record->nrty, 0, 200),
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('field_sample', 'jcpd');
		if(empty($node->field_sample['und'][0]['value']) && !empty($record->jcpd)){
		  $node->field_sample = array(
				'und' => array(
					0 => array(
						'value' => $record->jcpd,
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('field_author_info', 'zzjj');
		if(empty($node->field_author_info['und'][0]['value']) && !empty($record->zzjj)){
		  $node->field_author_info = array(
				'und' => array(
					0 => array(
						'value' => $record->zzjj,
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('field_features', 'features');
    if(empty($node->field_features['und'][0]['value']) && !empty($record->features)){
		  $node->field_features = array(
				'und' => array(
					0 => array(
						'value' => $record->features,
						'format' => 'full_html',
					)
				)
			);
		}		
		//$this->addFieldMapping('field_authorization_details', 'authorizationdetails');
		if(empty($node->field_authorization_details['und'][0]['value']) && !empty($record->authorizationdetails)){
		  $node->field_authorization_details = array(
				'und' => array(
					0 => array(
						'value' => $record->authorizationdetails,
						'format' => 'full_html',
					)
				)
			);
		}		
		//$this->addFieldMapping('field_relative_info', 'relativeinfo');
		if(empty($node->field_relative_info['und'][0]['value']) && !empty($record->relativeinfo)){
		  $node->field_relative_info = array(
				'und' => array(
					0 => array(
						'value' => $record->relativeinfo,
						'format' => 'full_html',
					)
				)
			);
		}	
    if($node->nid > 0){		
      node_save($node);
		}
		
	  $context['sandbox']['progress']++;
	  $context['sandbox']['last_bsno'] = $record->bsno;
	}

	if($context['sandbox']['progress'] ==$context['sandbox']['max']){
		$context['finished'] = 1;
	}else{
		$context['finished'] = $context['sandbox']['progress']/$context['sandbox']['max'];
	}
}

function fltrp_qy_longtext_finished($success, $results, $operations){
	if ($success) {
		// Here we do something meaningful with the results.
		$message = t('长文本信息信息同步完成');
		
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		$message = '在长文本信息信息同步时出现一个错误'. $error_operation[0] .' 其参数为 :'. print_r($error_operation[0], TRUE);
	}
	drupal_set_message($message);
}




function fltrp_qy_fenlei_form(){
	$form['submit'] = array(
		//'#type' =>'submit',
		'#value' => t('分类信息同步'),
	);
	return $form;
}
function fltrp_qy_fenlei_form_submit($form,&$form_state){
	//$types = array_filter($form_state['values']['types']);
	$batch =array(
		'operations' => array(
		  array('fltrp_qy_fenlei_process',array()),
		  ),
		'finished' => 'fltrp_qy_fenlei_finished',
		'title' => t('分类信息同步'),
		'init_message' => t('开始分类信息同步.'),
		//'progress_message' => t('Reindexed @current out of @total.'),
		'error_message' => t('分类信息同步遇到错误.'),
	);
	batch_set($batch);
}
function fltrp_qy_fenlei_process(&$context){
	$size =10;
	$vid = 15;  //外研社产品类别 category, id
	
	/*
	$vid_result = db_select('taxonomy_vocabulary', 'tv')
			->fields('tv', array('vid'))
			->condition('tv.machine_name', 'category', '=')
			->execute()
			->fetchAssoc();
			
	$vid = $vid_result['vid'];
	*/
	//$types_str ='story,page';
	//$types_str = "'".implode("','", $types)."'";
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['last_nid'] = 0;
		$context['sandbox']['max'] =
      db_select('node', 'n')
			->condition('n.type', 'book')
			->condition('n.nid', 30000, '<')
			->condition('n.nid', 595, '>')
			->countQuery()
			->execute()
			->fetchField();
			
	}
	
	$query = db_select('node', 'n')
		->fields('n', array('nid', 'vid'))
		->condition('n.nid', $context['sandbox']['last_nid'], '>')
		->condition('n.type', 'book')
		->condition('n.nid', 30000, '<')
		->condition('n.nid', 595, '>')
		->range(0, $size);
		
	$result = $query->execute();
	//drupal_set_message('tname:12233455');
	foreach ($result as $record) { 
	  $nid = $record->nid;
		$node = node_load($nid);

		$bsno = $node->field_bsno['und'][0]['value'];
		//drupal_set_message('bsno:'.$bsno);
		//根据bsno得到CID
		$query1 = Database::getConnection('default', 'data')
	  ->select('book2type', 'b')
		->fields('b', array('bsno', 'cid'))
		->condition('b.bsno', $bsno, '=');
	 
	  $result1 = $query1->execute();	
		$cid_array = array();
		foreach ($result1 as $record1) { 
		  $cid_array[] = $record1->cid;
		}
		//drupal_set_message('cid_array:'.$cid_array[0]);
		//根据CID得到对应的tid
		if(!empty($cid_array)){
			$query2 = Database::getConnection('default', 'data')
			->select('type2term', 't')
			->fields('t', array('cid', 'term'))
			->condition('t.cid', $cid_array, 'IN');
		 
			$result2 = $query2->execute();	
			
			$tid_array = array();
			foreach ($result2 as $record2) { 
				$tname = $record2->term;
				//$vid = ;
				$tid = fltrp_qy_get_tid_by_name($tname, $vid);
				if($tid > 0){
		      $tid_array[] = $tid;
			  }
				
			//	drupal_set_message('12345678');
			}
			
			//drupal_set_message('tname:12'. $tname);
			if(!empty($tid_array)){
			 // drupal_set_message('1234567890');
				foreach($tid_array as $key => $value){
					$node->field_category['und'][$key] = array(
						'tid' => $value,
					);
				}
				
				node_save($node);
			}
	  }
	
	  $context['sandbox']['progress']++;
	  $context['sandbox']['last_nid'] = $record->nid;
	}

	if($context['sandbox']['progress'] ==$context['sandbox']['max']){
		$context['finished'] = 1;
	}else{
		$context['finished'] = $context['sandbox']['progress']/$context['sandbox']['max'];
	}
}

function fltrp_qy_fenlei_finished($success, $results, $operations){
	if ($success) {
		// Here we do something meaningful with the results.
		$message = t('分类信息同步完成');
		
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		$message = '在分类信息同步时出现一个错误'. $error_operation[0] .' 其参数为 :'. print_r($error_operation[0], TRUE);
	}
	drupal_set_message($message);
}