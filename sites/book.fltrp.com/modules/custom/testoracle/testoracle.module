<?php

/**
 * Implements hook_menu().
 */
function testoracle_menu() {
  $items = array();
	$items['testoracle'] = array(
    'title' => 'Test oracle',
    'description' => 'Test oracle.',
    'page callback' => 'testoracle_test_page',
    'access callback' => TRUE,
  );
	return $items;
}
function testoracle_test_page(){
$output ="1234";
$node = node_load(7907);
debug($node);


Database::getConnection('default', 'data')->query('set names latin1');
	$query = Database::getConnection('default', 'data')
	  ->select('books', 'b')
		->fields('b', array('bsno', 'zjml', 'sp', 'nrty', 'jcpd', 'zzjj', 'features', 'authorizationdetails', 'relativeinfo'))
		->condition('b.bsno', 1000, '<')
		//->condition('b.bsno', $context['sandbox']['last_bsno'], '=')
		->orderBy('b.bsno', 'ASC')
		->range(0, 10);
	 
	$result = $query->execute();
 // drupal_set_message('123456');
	foreach ($result as $record) { 
	  //得到nid
		$nid_query = db_select('field_data_field_bsno', 'fb')
			->fields('fb', array('entity_id'))
			->condition('fb.field_bsno_value', $record->bsno, '=')
			->condition('fb.bundle', 'book', '=');
			
		$nid_result = $nid_query->execute()->fetchAssoc();
		$nid = $nid_result['entity_id'];
		//得到节点
    $node = node_load($nid);
		
		 //drupal_set_message('123456789');
		//编码转换
		$record->zjml = iconv('EUC-CN',"UTF-8//IGNORE",$record->zjml) ; //iconv转换
		$record->sp = iconv('EUC-CN',"UTF-8//IGNORE",$record->sp) ; //iconv转换
		
		$record->nrty = iconv('EUC-CN',"UTF-8//IGNORE",$record->nrty) ; //iconv转换
		$record->jcpd = iconv('EUC-CN',"UTF-8//IGNORE",$record->jcpd) ; //iconv转换
		$record->zzjj = iconv('EUC-CN',"UTF-8//IGNORE",$record->zzjj) ; //iconv转换
		$record->features = iconv('EUC-CN',"UTF-8//IGNORE",$record->features) ; //iconv转换
		
		$record->authorizationdetails = iconv('EUC-CN',"UTF-8//IGNORE",$record->authorizationdetails) ; //iconv转换
		$record->relativeinfo = iconv('EUC-CN',"UTF-8//IGNORE",$record->relativeinfo) ; //iconv转换

		
		//向node映射
    //$this->addFieldMapping('field_directory', 'zjml');
		if(empty($node->field_directory['und'][0]['value']) && !empty($record->zjml)){
		  $node->field_directory = array(
				'und' => array(
					0 => array(
						'value' => $record->zjml,
						'format' => 'full_html',
					)
				)
			);
			//$node->field_directory['und'][0]['value'] = $record->zjml;
		}
		//$this->addFieldMapping('field_sp', 'sp');
		if(empty($node->field_sp['und'][0]['value']) && !empty($record->sp)){
		  $node->field_sp = array(
				'und' => array(
					0 => array(
						'value' => $record->sp,
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('body', 'nrty')
		if(empty($node->body['und'][0]['value']) && !empty($record->nrty)){
		  $node->body = array(
				'und' => array(
					0 => array(
						'value' => $record->nrty,
					//	'summary' => substr($record->nrty, 0, 200),
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('field_sample', 'jcpd');
		if(empty($node->field_sample['und'][0]['value']) && !empty($record->jcpd)){
		  $node->field_sample = array(
				'und' => array(
					0 => array(
						'value' => $record->jcpd,
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('field_author_info', 'zzjj');
		if(empty($node->field_author_info['und'][0]['value']) && !empty($record->zzjj)){
		  $node->field_author_info = array(
				'und' => array(
					0 => array(
						'value' => $record->zzjj,
						'format' => 'full_html',
					)
				)
			);
		}
		//$this->addFieldMapping('field_features', 'features');
    if(empty($node->field_features['und'][0]['value']) && !empty($record->features)){
		  $node->field_features = array(
				'und' => array(
					0 => array(
						'value' => $record->features,
						'format' => 'full_html',
					)
				)
			);
		}		
		//$this->addFieldMapping('field_authorization_details', 'authorizationdetails');
		if(empty($node->field_authorization_details['und'][0]['value']) && !empty($record->authorizationdetails)){
		  $node->field_authorization_details = array(
				'und' => array(
					0 => array(
						'value' => $record->authorizationdetails,
						'format' => 'full_html',
					)
				)
			);
		}		
		//$this->addFieldMapping('field_relative_info', 'relativeinfo');
		if(empty($node->field_relative_info['und'][0]['value']) && !empty($record->relativeinfo)){
		  $node->field_relative_info = array(
				'und' => array(
					0 => array(
						'value' => $record->relativeinfo,
						'format' => 'full_html',
					)
				)
			);
		}	
    if($node->nid > 0){		
      //node_save($node);
		}
		
	  //$context['sandbox']['progress']++;
	  //$context['sandbox']['last_bsno'] = $record->bsno;
	}



return $output;
}


function testoracle_test_page4(){
$output ="1234";
$nid_query = db_select('field_data_field_bsno', 'fb')
			->fields('fb', array('entity_id'))
			->condition('fb.field_bsno_value', 529, '=')
			->condition('fb.bundle', 'book', '=');
			
		$nid_result = $nid_query->execute()->fetchAssoc();
		$nid = $nid_result['entity_id'];
		//得到节点
    $node = node_load($nid);
		
		debug($node);
		//drupal_set_message("123:".$record->bsno.";456:".$nid);
		
		//根据cid得到tid
		$tid_query = db_select('field_data_field_oid', 'f')
			->fields('f', array('entity_id'))
			->condition('f.field_oid_value', 'YYZHGN', '=')
			->condition('f.entity_type', 'taxonomy_term', '=');
			
		$tid_result = $tid_query->execute()->fetchAssoc();
		$tid = $tid_result['entity_id'];
		$output .="tid:".$tid;
return $output;
}
function testoracle_test_page3(){
$output ="1234";
//$nid = 1;
//$node = node_load($nid);

//$tid = 202;
	//$term = taxonomy_term_load($tid);

//debug($term);

/*
$max = Database::getConnection('default', 'data')
			->select('book2type', 'b')
			//->condition('b.cid', $fenshe_array, 'IN')
			->leftJoin('bookotype', 'bt', 'b.cid = bt.id AND bt.isseries = :isseries', array(':isseries' => 1))
			->condition('b.flag', 1, '<')
			//->leftJoin('bookotype', 'bt', 'b.cid = bt.id AND bt.isseries = :isseries', array(':isseries' => 1))
			->countQuery()
			->execute()
			->fetchField();
	*/		
  $max_sql = "select count(*) 
	         from book2type b 
					 LEFT JOIN bookotype bt ON b.cid = bt.id 
					 WHERE b.flag < 1 AND bt.isseries = :isseries";
	$result = Database::getConnection('default', 'data')->query($max_sql, array(':isseries' => 1));
	$max = $result->fetchField();
$output .= $max;
return $output;
}
function testoracle_test_page2(){
  $output ="1234";
  $size =99;
	//$vid = 8;
	//$types_str ='story,page';
	//$types_str = "'".implode("','", $types)."'";
	if(!isset($context['sandbox']['progress'])){
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['max'] = Database::getConnection('default', 'data')
			->select('book2type', 'b')
			->countQuery()
			->execute()
			->fetchField();
		$output .= $context['sandbox']['max'];
	}
	$query = Database::getConnection('default', 'data')
	  ->select('book2type', 'b')
		->fields('b', array('bsno', 'cid'))
		->condition('b.flag', 1, '<')
		//->condition('q.bsno', 1000, '<')
		->range(0, $size);
	
	$result = $query->execute();
	foreach ($result as $record) { 
	//$record->cid ='BMJC';
	
	  //debug($record);
    $tname = '';	
		$output .= $record->cid;
		
	  if($record->cid =='BMJC'){
		  $tname = '基础英语教育分社';
		}
		if($record->cid =='BMZJ'){
		  $tname = '职业教育出版分社';
		}
		if($record->cid =='BMGY'){
		  $tname = '高等英语教育出版分社';
		}
		if($record->cid =='BMZY'){
		  $tname = '英语教育出版分社';
		}
		if($record->cid =='BMXS'){
		  $tname = '综合英语出版分社';
		}
		if($record->cid =='BMSK'){
		  $tname = '人文社科出版分社';
		}

		if($record->cid =='BMEL'){
		  $tname = '《英语学习》杂志社';
		}
		if($record->cid =='BMSM'){
		  $tname = '数码产品事业部';
		}
		if($record->cid =='BMWL'){
		  $tname = '电子网络出版分社';
		}
		if($record->cid =='BMPG'){
		  $tname = '北京青苹果文化发展公司';
		}
		if($record->cid =='BMEF'){
		  $tname = '早教中心';
		}
		
		if(!empty($tname)){
		
		  //根据machine_name得到vid,
		  $vid_result = db_select('taxonomy_vocabulary', 'tv')
			->fields('tv', array('vid'))
			->condition('tv.machine_name', 'fenshe', '=')
			->execute()
			->fetchAssoc();
			
			$vid = $vid_result['vid'];
			
		  $tid = fltrp_qy_get_tid_by_name($tname, $vid);
			$output .= 'tid:'.$tid;
			$output .= 'tid:'.$tname;
			//根据bsno得到nid
			$nid_query = db_select('field_data_field_bsno', 'fb')
			->fields('fb', array('entity_id'))
			->condition('fb.field_bsno_value', $record->bsno, '=')
			->condition('fb.bundle', 'book', '=');
			
			$nid_result = $nid_query->execute()->fetchAssoc();
			$nid = $nid_result['entity_id'];
			$output .= $nid;
			$node = node_load($nid);
			
			$node->field_department = array(
				'und' => array(
					0 => array(
						'tid' => $tid
					)
				)
			);
			debug($node);
			node_save($node);
		}
		drupal_set_message('bsno:'.$record->bsno.';cid:'.$record->cid);
		
	  Database::getConnection('default', 'data')
		  ->update('book2type')
			->fields(
			   array(    
					 'flag' => 1,    
				 ))
			->condition('bsno', $record->bsno, '=')
			->condition('cid', $record->cid, '=')
			->execute();
			
	 // $context['sandbox']['progress']++;
	
		
	}
  return $output;
}
function testoracle_test_page1(){
   $output = "123456";
	 
	// $query = Database::getConnection('default', 'sqlsrv');
	//->select('qrybooks', 'n')
    //->fields('n', array('nid'))
	//->condition('n.type', 'zuowen_ziyou_shangchuan', '=')
	//->range(0, 10);
	/*
	$result = $query->execute();
	foreach ($result as $record) { 
	  $output .= 'test:'. $record->nid;
	}
	*/
	/*
	$path = '';
	$path=drupal_get_path('module', 'migrate_fltrp');
	$path=$path.'/bookext/'.'443'.'b.txt';
	$data = file_get_contents($path) ;
	//$encode = mb_detect_encoding($data, array("ASCII","latin1","GB2312","GBK","UTF-8","BIG5"));
  $encode = mb_detect_encoding($data);
	$output .= 'encode:'.$encode;
	$data = iconv('',"UTF-8//IGNORE",$data); //icon
	$output .= $data;
	*/
	
	$query = Database::getConnection('default', 'drupal74')
		->select('qrybooks', 'q')
    ->fields('q', array('bsno', 'bname', 'ebname', 'materielno', 'isbn', 'writer', 'bianshi', 'yc', 'price', 'zs',
		   'ys', 'publishdate', 'inputdate', 'zdfs', 'kb', 'ekb', 'type', 'dzdx'))

		->condition('q.bsno', 500, '<');
	//$result = $query->execute();
	
	db_set_active('drupal74');
	db_query('set names latin1');
	$result = db_query('select dzdx from qrybooks where bsno < 1000');
	foreach($result as $row){
	  $encode = mb_detect_encoding($row->dzdx);
		 $output .= $encode;
	  //$row->bname = iconv('UTF-8',"latin1", $row->bname); //icon
		$row->dzdx = iconv("",'UTF-8//IGNORE', $row->dzdx); //icon
	  $output .= $row->dzdx;
	}
	db_set_active('default');
	
/*
  Database::getConnection('default', 'data')->query('set names latin1');
		$query = Database::getConnection('default', 'data')
		->select('qrybooks', 'q')
    ->fields('q', array('bsno', 'bname', 'ebname', 'materielno', 'isbn', 'writer', 'bianshi', 'yc', 'price', 'zs',
		   'ys', 'publishdate', 'inputdate', 'zdfs', 'kb', 'ekb', 'type', 'dzdx'))
	  //->leftJoin('term_hierarchy', 'th', 'td.tid = th.tid')
		//->leftJoin('term_data', 'tdp', 'th.parent = tdp.tid')
		//->addField('tdp', 'name', 'parent_name')
		->condition('q.bsno', 1000, '<');
		//->execute();
	$result = $query->execute();
	foreach($result as $row){
	  //$encode = mb_detect_encoding($row->bname);
		// $output .= $encode;
	  //$row->bname = iconv('UTF-8',"latin1", $row->bname); //icon
		//$row->bname = iconv("",'UTF-8//IGNORE', $row->bname); //icon
	  $output .= $row->dzdx;
	}
	*/
		/*
	Database::getConnection('default', 'data')->query('set names latin1');
		$query = Database::getConnection('default', 'data');
		$query->select('qrybooks', 'q')
    ->fields('q', array('type'))
	  //->leftJoin('term_hierarchy', 'th', 'td.tid = th.tid')
		//->leftJoin('term_data', 'tdp', 'th.parent = tdp.tid')
		//->addField('tdp', 'name', 'parent_name')
		->distinct();
		//->condition('q.dzdx', 1000, '<');
		//->execute();
	$result = $query->execute();
	foreach($result as $row){
	   $output .= $row->type;
	}
	*/
	
	return $output;
}