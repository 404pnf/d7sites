<?php 

/*新概念大赛短信投票
 * 
 */

/*带通配符并且回调参数为array(1)，与不带通配符效果是一样的。 
 */

   function sms_vote_menu(){
     $items['admin/settings/smsvote'] = array(
       'title' =>'短信投票限额设置',
       'description' => t('设置手机投票的各种限制'),
       'page callback' => 'drupal_get_form',
       'page arguments' => array('sms_vote_settings'),
       'access arguments' =>array('administer site configuration'),    
     );
   	
     
      $items['smsvote'] =array( 
        'title' => '短信投票',
      	'page callback' => 'sms_vote_deal',
      //'page arguments' => array($linkid,$msg,$oa,$sendtime,$mobile),
      	'access callback' =>TRUE,   
        'type'=> MENU_CALLBACK,
            );

      return $items;      
   } 

   function sms_vote_settings(){
     $form['max_vote_per_mobile'] =array(
       '#type' => 'textfield',
       '#title' => t('每个手机最大投票总数'),     
       '#description' => t('设置每个手机的最大投票数量'),
       '#default_value' => variable_get('max_vote_per_mobile',3),
     );
     
    $form['max_vote_per_people_per_mobile'] =array(
       '#type' => 'textfield',
       '#title' => t('每个手机给每个选手最大投票数'),     
       '#description' => t('设置每个手机给每个选手最大投票数量'),
       '#default_value' => variable_get('max_vote_per_people_per_mobile',1),
     );
     
     return system_settings_form($form);
   }
   
   function sms_vote_deal(){
   //对方提供的参数是POST或GET方式。参数传递方式为固定方式，所以未使用DRUPAL路由方式处理；
   
    	
    $linkid = $_GET['linkid'];
    $msg = $_GET['msg'];
    $oa = $_GET['oa'];
    $sendtime = $_GET['sendtime'];
    $mobile = $_GET['mobile'];
   	$max_vote_per_mobile = variable_get('max_vote_per_mobile',3);
   	$max_vote_per_people_per_mobile = variable_get('max_vote_per_people_per_mobile',1);
   	
   	
   	//从短信日志中取出信息，判断当前手机号投票数是否超出限制
   	$sql = "select count(1) vote_count from {sms_vote} where mobile=:mobile" ;
   	$result = db_query($sql,array(':mobile'=>$mobile));
   	 if($data=$result->fetchObject()){
   	   $vote_count = $data->vote_count;
   	 }

   	 if($vote_count>=$max_vote_per_mobile)
   	 {
		$sms_return_msg=t('投票数超过总投票限制');
   	 	sms_vote_send($sms_return_msg,$mobile);
   	 	return(sms_vote_markup($sms_return_msg)); 
   	 }

   	 
   	//从短信日志中取出信息，判断当前手机号投票数是否超出限制
   	$sql = "select count(1) vote_count_this_player from {sms_vote} where mobile=:mobile and msg=:msg" ;
   	$result = db_query($sql,array(':mobile'=>$mobile,':msg'=>$msg));
   	 if($data=$result->fetchObject()){
   	   $vote_count_this_player = $data->vote_count_this_player;
   	 }
   	 
   	 if($vote_count_this_player>=$max_vote_per_people_per_mobile)
   	 {
   	   $sms_return_msg=t('投票数超过投票限制'.$vote_count_this_player.':'.$max_vote_per_people_per_mobile);
   	 	sms_vote_send($sms_return_msg,$mobile);
   	 	return(sms_vote_markup($sms_return_msg)); 
   	 }    	 


   	$node_type = 'video_file';
   	$sql = "select * from {node} where type=:node_type and uid=:uid and status=1" ;
   	$result = db_query($sql,array(':node_type'=>$node_type,':uid'=>$msg));   
    if($data=$result->fetchObject()){
       $node_id = $data->nid;  
    }
    else 
   {
     //$sms_return_msg=t('无效投票，请检查您投票的选手号码是否正确');
     $sms_return_msg='2'; 
     sms_vote_send($sms_return_msg,$mobile);
     return(sms_vote_markup($sms_return_msg));     
   }

   
   //向短信日志中记录
   	$sms_table = 'sms_vote';
   	$sms_vote = new stdClass();
   	$sms_vote->mobile = $mobile;
   	$sms_vote->msg = $msg;
   	$sms_vote->sendtime =strtotime("now")  ;
   	$sms_vote->linkid =$linkid;
   	drupal_write_record($sms_table,$sms_vote);
   	 
   	 

//   	将投票信息追加到投票系统中

  //为了防止后台修改手机票数，改为每次手机投票重新统计该选手手机投票，并更新相应记录；
   	$node = node_load($node_id);   	

    $sql = "select count(1) votecount from sms_vote  where msg=:msg " ;
   	$result = db_query($sql,array(':msg'=>$msg));   
    if($data=$result->fetchObject()){
       $votecount = $data->votecount;  
    }
   	
   	$node->field_mobilecount['zh-hans'][0]['value'] = $votecount;

   	node_save($node);
   	$sql='update {node} set status=1 where nid=:nid';
   	db_query($sql,array(':nid'=>$node_id));
   	
//   	$flag_table = 'flag_content';
//   	$flag_vote = new stdClass();
//   	$flag_vote->fid = 2;
//   	$flag_vote->content_type = 'user';
//   	$flag_vote->content_id = $msg;
//   	$flag_vote->uid = 1 ;
//   	$flag_vote->sid = 0 ;
//   	$flag_vote->timestamp = strtotime("now")  ;

   	//	db_query($sql);
   	//db_query($sql,array(':fid'=>$flag_vote->fid ,':content_type'=>$flag_vote->content_type,':content_id'=>$flag_vote->content_id ,':uid'=>$flag_vote->uid ,':sid'=>$flag_vote->sid ,':timestamp'=>$flag_vote->timestamp ));  
   	//drupal_write_record($flag_table,$flag_vote);  	
   	
   	$action = 'flag';
   	$flag_name = 'vote_for_user' ;
   	$content_id = $msg;
   	$account = 1; 
   	
   //	flag($action, $flag_name, $content_id, $account = NULL); 
   	
   	
//    $vote['content_type']= 'node' ;
//    $vote['content_id']=$node_id    ;
//    $vote['value_type']= 'points'    ;
//    $vote['value'] =1        ;
//    $vote['tag']='顶'           ;
//    $vote['uid']=0           ;
//    $vote['vote_source']='218.247.244.25'   ;
//    $vote['timestamp']=strtotime("now")   ;
   	 
   // votingapi_set_votes($vote);

    //$sms_return_msg=t("投票成功");
    $sms_return_msg='1';
   	drupal_set_message("mobile is  $mobile,userid is $msg");
   	sms_vote_send($sms_return_msg,$mobile);
   	return(sms_vote_markup($sms_return_msg));
   
   }

   
   function sms_vote_markup($sms_msg =null){
   
      return "<chiling-return-msg>$sms_msg</chiling-return-msg>"; 
   }

   
  /*
   * 下行短信通道实现程序
   */ 
  function sms_vote_send($sms_to_be_sent=null,$mobile=null)
  {
  	 if(isset($sms_to_be_sent)) {
  	 	//drupal_set_message( $sms_to_be_sent);
  	     $sql = "select max(sms_id) records from sms_vote " ;
   		 $result = db_query($sql);   
         if($data=$result->fetchObject()){
            $records = $data->records;  
          }
  	 	
  	 	//$url="http://210.51.13.211:8790/smscenter/SendSmsServlet?user=chilink&password=123456&destter=$mobile&content=$sms_to_be_sent&records=$records";
  	 	//drupal_set_message($url);
  	 }
  } 