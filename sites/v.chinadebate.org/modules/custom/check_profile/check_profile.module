<?php

/*检查某用户特定profile是否已经填写
 * 
 */
   function check_profile_menu(){

     $items['admin/config/check_profile'] = array(
       'title' =>'检查profile的类型设置',
       'description' => t('检查用户特定profile类型是否已经填写'),
       'page callback' => 'drupal_get_form',
       'page arguments' => array('check_profile_settings'),
       'access arguments' =>array('administer site configuration'),   
       'type' => MENU_NORMAL_ITEM, 
     );
     
   	
      return $items;      
   } 
   
   function check_profile_form_alter(&$form, &$form_state, $form_id){
    $node_form_id =  variable_get('node_form_id','');
   	if($form_id == $node_form_id ){
  		 check_profile_if_exist();
 	   }   
   }

   function check_profile_settings(){
     $form['profile_type'] =array(
       '#type' => 'textfield',
       '#title' => t('profile类型'),     
       '#description' => t('设置要检查的profile类型'),
       '#default_value' => variable_get('profile_type','personal_info'),
     );
     
     $form['node_form_id'] =array(
       '#type' => 'textfield',
       '#title' => t('创建什么节点类型时才检测profile'),     
       '#description' => t('设置改节点类型的form id,例子：bookreview_node_form'),
       '#default_value' => variable_get('node_form_id',''),
     );
     
     
     return system_settings_form($form);
   }
   

function check_profile_if_exist() {

	global $user;
	$destination = drupal_get_destination()	;
	$profile_type = variable_get('profile_type');
	$message = '';
	$sql = "select * from {profile} where type=:profile_type and uid=:uid";
	$result = db_query ( $sql, array (':profile_type' => $profile_type, ':uid' => $user->uid ) );
	if($user->uid>0){
	  if (!($data = $result->fetchAll())) {
	
	     $message = t('您尚未填写完成的用户信息，请先补充完整后再进行其他操作');	 
         drupal_set_message($message);
         drupal_goto("profile-$profile_type/$user->uid/edit",array('query' => $destination));

         //header('Location: ' . url("profile-$profile_type/$user->uid/edit", array('query' => array('destination' => $destination), 'absolute' => TRUE)), TRUE, 302);
      }
	}  
	

}
