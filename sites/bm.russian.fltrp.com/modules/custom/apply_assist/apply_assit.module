<?php

/* 俄语等级考试报名助手，用来限制报名数；
 * 
 */

//function apply_assit_menu() {
	
	//$items ['test'] = array ('title' => 'test', 'description' => t ( 'test' ), 'page callback' => 'apply_assit_show_profile', 'access callback' => true );
	
	//return $items;

//}

//function apply_assit_show_profile() {
	//global $user;
	//$uid = $user->uid;

	//$profile_type = 'main';
	//$node_type = 'baoming';
		
  //$query = new EntityFieldQuery();		
  //$publicGroupCount = $query
	  //->entityCondition('entity_type', 'node')
		//->entityCondition('bundle', 'baoming')
		//->fieldCondition('field_group','value','公共英语组')
		//->propertyCondition('uid',$uid)
    //->count()
    //->execute();

	//return t ( $publicGroupCount );

//}


function apply_assit_menu() {
	
	$items ['confirm-baoming'] = array ('title' => '确认报名', 'description' => t ( '确认报名' ), 'page callback' => 'apply_assit_confirm_baoming', 'access callback' => true );
	
	return $items;

}


function apply_assit_menu_alter(&$items) {
	
	$items ['node/%node/edit']['page callback']='apply_assit_assert_if_could_modify';
}


function apply_assit_assert_if_could_modify($node)
{

		global $user;
			
		 debug($user,'',TRUE);
		$node_type=$node->type;
		
		switch($node_type){				
				case 'baoming':							
							$current_user_roles = $user->roles;

					    	if(in_array("学校",$current_user_roles)){
										$uid = $user->uid;
										 $query = new EntityFieldQuery();				   
										 $baomingInfo= $query
											  ->entityCondition('entity_type', 'node')
												->entityCondition('bundle', 'schoolinfo')
												->propertyCondition('uid',$uid)
											->execute();

										$schoolinfo_nids = array_keys($baomingInfo['node']);

										$schoolinfo_items = node_load($schoolinfo_nids[0]);

										$baoming_confirm=$schoolinfo_items->field_baoming_confirm['und'][0]['value'];

										if($baoming_confirm==1){
											return t('您已经确认过报名信息，无法再修改。');
										}else{
											return node_page_edit($node);
										}

							}else{								
									return node_page_edit($node);
							}
							break;

				  default :	
						  return node_page_edit($node);
 				
		}

		
}



function apply_assit_confirm_baoming(){

				global $user;
				$uid = $user->uid;


				  $query = new EntityFieldQuery();				   
				  $baomingInfo= $query
					  ->entityCondition('entity_type', 'node')
						->entityCondition('bundle', 'schoolinfo')
						->propertyCondition('uid',$uid)
					->execute();

					$schoolinfo_nids = array_keys($baomingInfo['node']);

					$schoolinfo_items = node_load($schoolinfo_nids[0]);

					$schoolinfo_items->field_baoming_confirm['und'][0]['value']=1;

					node_save($schoolinfo_items);

				//debug($schoolinfo_items,'',TRUE );	

				//	$schoolinfo_term_id =$schoolinfo_items[$schoolinfo_nids[0]]->field_schoolname['und'][0]['tid'];

					//$baoming_confirm =$schoolinfo_items[$schoolinfo_nids[0]]->field_baoming_confirm['und'][0]['value'];

					//drupal_set_message( '这个值是：'.$baoming_confirm);

			return t ( "贵校的报名信息已经确认！");

}


function apply_assit_form_alter(&$form, &$form_state, $form_id){		
	if ($form_id == 'baoming_node_form') {
		$form ['#validate'] [] = 'apply_assit_extra_validate';
	}
}


function apply_assit_extra_validate($form, &$form_state) {
		global $user;
		$uid = $user->uid;

		$baomingLimited =1;

		  $query = new EntityFieldQuery();				   
		  $baomingCount = $query
			  ->entityCondition('entity_type', 'node')
				->entityCondition('bundle', 'baoming')
				->propertyCondition('uid',$uid)
			->count()
			->execute();


		if(strtolower (arg(2))!='edit'){
			if($baomingCount>=$baomingLimited){
					form_set_error ( 'field_firstname',t ( '报名数超出限制。每名报名者只能进行一次报名'));
			  }
		}


}




